/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vista;

import java.awt.Font;
import java.awt.FontFormatException;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.border.EmptyBorder;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;
import static Vista.Seleccion.icono;
import com.sun.org.apache.bcel.internal.generic.AALOAD;
import controlador.FileManager;
import javax.swing.JOptionPane;

/**
 *
 * @author jalil
 */
public class SeleccionIcono extends javax.swing.JFrame {

    /**
     * Creates new form SeleccionIcono
     */
    public SeleccionIcono() {
        initComponents();
        this.setLocationRelativeTo(null);
        btnSalir.setOpaque(false);
        btnSalir.setContentAreaFilled(false);
        btnSalir.setBorderPainted(false);
        btnMinimizar.setOpaque(false);
        btnMinimizar.setContentAreaFilled(false);
        btnRegresar.setOpaque(false);
        btnRegresar.setContentAreaFilled(false);
        btnRegresar.setBorderPainted(false);
        btnEscoger.setOpaque(false);
        btnEscoger.setContentAreaFilled(false);
        btnEscoger.setBorderPainted(false);
        ImageIcon icono = new ImageIcon(getClass().getResource("/icons/icon.png"));
        this.setIconImage(icono.getImage());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        root = new javax.swing.JPanel();
        Pandy = new javax.swing.JLabel();
        Girafina = new javax.swing.JLabel();
        Ellie = new javax.swing.JLabel();
        Coni = new javax.swing.JLabel();
        Koko = new javax.swing.JLabel();
        Zippy = new javax.swing.JLabel();
        Ozzy = new javax.swing.JLabel();
        Orly = new javax.swing.JLabel();
        Ursula = new javax.swing.JLabel();
        Ollie = new javax.swing.JLabel();
        Cervi = new javax.swing.JLabel();
        Camila = new javax.swing.JLabel();
        Morris = new javax.swing.JLabel();
        Violeta = new javax.swing.JLabel();
        Capito = new javax.swing.JLabel();
        Nina = new javax.swing.JLabel();
        Leopoldo = new javax.swing.JLabel();
        Ardi = new javax.swing.JLabel();
        Wally = new javax.swing.JLabel();
        Tiggy = new javax.swing.JLabel();
        Ratito = new javax.swing.JLabel();
        Fiona = new javax.swing.JLabel();
        Carlitos = new javax.swing.JLabel();
        Nelly = new javax.swing.JLabel();
        scrollTitulo = new javax.swing.JScrollPane();
        txtTitulo = new javax.swing.JTextArea();
        scrollDescripcion = new javax.swing.JScrollPane();
        txtDescripcion = new javax.swing.JTextArea();
        btnRegresar = new javax.swing.JButton();
        btnMinimizar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        btnEscoger = new javax.swing.JButton();
        seleccionicono = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        root.setBackground(new java.awt.Color(255, 255, 255));
        root.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Pandy.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PandyMouseClicked(evt);
            }
        });
        root.add(Pandy, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 120, 100, 100));

        Girafina.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GirafinaMouseClicked(evt);
            }
        });
        root.add(Girafina, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 260, 90, 90));

        Ellie.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                EllieMouseClicked(evt);
            }
        });
        root.add(Ellie, new org.netbeans.lib.awtextra.AbsoluteConstraints(98, 390, 90, 100));

        Coni.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ConiMouseClicked(evt);
            }
        });
        root.add(Coni, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 130, 100, 90));

        Koko.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                KokoMouseClicked(evt);
            }
        });
        root.add(Koko, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 256, 100, 100));

        Zippy.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ZippyMouseClicked(evt);
            }
        });
        root.add(Zippy, new org.netbeans.lib.awtextra.AbsoluteConstraints(218, 390, 100, 100));

        Ozzy.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                OzzyMouseClicked(evt);
            }
        });
        root.add(Ozzy, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 520, 100, 100));

        Orly.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                OrlyMouseClicked(evt);
            }
        });
        root.add(Orly, new org.netbeans.lib.awtextra.AbsoluteConstraints(218, 520, 100, 100));

        Ursula.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                UrsulaMouseClicked(evt);
            }
        });
        root.add(Ursula, new org.netbeans.lib.awtextra.AbsoluteConstraints(348, 530, 90, 90));

        Ollie.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                OllieMouseClicked(evt);
            }
        });
        root.add(Ollie, new org.netbeans.lib.awtextra.AbsoluteConstraints(348, 390, 90, 100));

        Cervi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CerviMouseClicked(evt);
            }
        });
        root.add(Cervi, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 520, 100, 100));

        Camila.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CamilaMouseClicked(evt);
            }
        });
        root.add(Camila, new org.netbeans.lib.awtextra.AbsoluteConstraints(598, 520, 100, 100));

        Morris.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MorrisMouseClicked(evt);
            }
        });
        root.add(Morris, new org.netbeans.lib.awtextra.AbsoluteConstraints(598, 390, 100, 100));

        Violeta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                VioletaMouseClicked(evt);
            }
        });
        root.add(Violeta, new org.netbeans.lib.awtextra.AbsoluteConstraints(478, 390, 90, 100));

        Capito.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CapitoMouseClicked(evt);
            }
        });
        root.add(Capito, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 260, 90, 90));

        Nina.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                NinaMouseClicked(evt);
            }
        });
        root.add(Nina, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 120, 90, 100));

        Leopoldo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LeopoldoMouseClicked(evt);
            }
        });
        root.add(Leopoldo, new org.netbeans.lib.awtextra.AbsoluteConstraints(475, 130, 90, 90));

        Ardi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ArdiMouseClicked(evt);
            }
        });
        root.add(Ardi, new org.netbeans.lib.awtextra.AbsoluteConstraints(475, 260, 90, 90));

        Wally.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                WallyMouseClicked(evt);
            }
        });
        root.add(Wally, new org.netbeans.lib.awtextra.AbsoluteConstraints(345, 256, 100, 100));

        Tiggy.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TiggyMouseClicked(evt);
            }
        });
        root.add(Tiggy, new org.netbeans.lib.awtextra.AbsoluteConstraints(345, 130, 100, 90));

        Ratito.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RatitoMouseClicked(evt);
            }
        });
        root.add(Ratito, new org.netbeans.lib.awtextra.AbsoluteConstraints(725, 130, 100, 90));

        Fiona.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                FionaMouseClicked(evt);
            }
        });
        root.add(Fiona, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 260, 90, 90));

        Carlitos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CarlitosMouseClicked(evt);
            }
        });
        root.add(Carlitos, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 390, 100, 100));

        Nelly.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                NellyMouseClicked(evt);
            }
        });
        root.add(Nelly, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 520, 100, 100));

        scrollTitulo.setBorder(null);
        scrollTitulo.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        scrollTitulo.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        txtTitulo.setColumns(20);
        txtTitulo.setRows(5);
        txtTitulo.setAutoscrolls(false);
        txtTitulo.setBorder(null);
        scrollTitulo.setViewportView(txtTitulo);

        root.add(scrollTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 230, 340, 60));

        scrollDescripcion.setBorder(null);
        scrollDescripcion.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        scrollDescripcion.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        txtDescripcion.setColumns(20);
        txtDescripcion.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtDescripcion.setRows(5);
        txtDescripcion.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txtDescripcion.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        txtDescripcion.setSelectionColor(new java.awt.Color(255, 255, 255));
        scrollDescripcion.setViewportView(txtDescripcion);

        root.add(scrollDescripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 290, 340, 240));

        btnRegresar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });
        root.add(btnRegresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 50, 50));

        btnMinimizar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnMinimizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMinimizarActionPerformed(evt);
            }
        });
        root.add(btnMinimizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(1230, 20, 70, 60));

        btnSalir.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        root.add(btnSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(1310, 20, 60, 60));

        btnEscoger.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEscogerActionPerformed(evt);
            }
        });
        root.add(btnEscoger, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 580, 260, 60));

        seleccionicono.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/selección avatar.png"))); // NOI18N
        root.add(seleccionicono, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1400, 750));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(root, javax.swing.GroupLayout.PREFERRED_SIZE, 1400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(root, javax.swing.GroupLayout.PREFERRED_SIZE, 750, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void PandyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PandyMouseClicked
        try {
            mostrarDescripcion("Pandy");
        } catch (FontFormatException ex) {
            Logger.getLogger(SeleccionIcono.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(SeleccionIcono.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_PandyMouseClicked

    private void ConiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ConiMouseClicked
        try {
            mostrarDescripcion("Coni");
        } catch (FontFormatException ex) {
            Logger.getLogger(SeleccionIcono.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(SeleccionIcono.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ConiMouseClicked

    private void TiggyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TiggyMouseClicked
        try {
            mostrarDescripcion("Tiggy");
        } catch (FontFormatException ex) {
            Logger.getLogger(SeleccionIcono.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(SeleccionIcono.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_TiggyMouseClicked

    private void LeopoldoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LeopoldoMouseClicked
        try {
            mostrarDescripcion("Leopoldo");
        } catch (FontFormatException ex) {
            Logger.getLogger(SeleccionIcono.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(SeleccionIcono.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_LeopoldoMouseClicked

    private void NinaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NinaMouseClicked
        try {
            mostrarDescripcion("Nina");
        } catch (FontFormatException ex) {
            Logger.getLogger(SeleccionIcono.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(SeleccionIcono.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_NinaMouseClicked

    private void RatitoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RatitoMouseClicked
        try {
            mostrarDescripcion("Ratito");
        } catch (FontFormatException ex) {
            Logger.getLogger(SeleccionIcono.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(SeleccionIcono.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_RatitoMouseClicked

    private void GirafinaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GirafinaMouseClicked
        try {
            mostrarDescripcion("Girafina");
        } catch (FontFormatException ex) {
            Logger.getLogger(SeleccionIcono.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(SeleccionIcono.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_GirafinaMouseClicked

    private void KokoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_KokoMouseClicked
        try {
            mostrarDescripcion("Koko");
        } catch (FontFormatException ex) {
            Logger.getLogger(SeleccionIcono.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(SeleccionIcono.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_KokoMouseClicked

    private void WallyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WallyMouseClicked
        try {
            mostrarDescripcion("Wally");
        } catch (FontFormatException ex) {
            Logger.getLogger(SeleccionIcono.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(SeleccionIcono.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_WallyMouseClicked

    private void ArdiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ArdiMouseClicked
        try {
            mostrarDescripcion("Ardi");
        } catch (FontFormatException ex) {
            Logger.getLogger(SeleccionIcono.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(SeleccionIcono.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ArdiMouseClicked

    private void CapitoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CapitoMouseClicked
        try {
            mostrarDescripcion("Capito");
        } catch (FontFormatException ex) {
            Logger.getLogger(SeleccionIcono.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(SeleccionIcono.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_CapitoMouseClicked

    private void FionaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FionaMouseClicked
        try {
            mostrarDescripcion("Fiona");
        } catch (FontFormatException ex) {
            Logger.getLogger(SeleccionIcono.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(SeleccionIcono.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_FionaMouseClicked

    private void EllieMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EllieMouseClicked
        try {
            mostrarDescripcion("Ellie");
        } catch (FontFormatException ex) {
            Logger.getLogger(SeleccionIcono.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(SeleccionIcono.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_EllieMouseClicked

    private void ZippyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ZippyMouseClicked
        try {
            mostrarDescripcion("Zippy");
        } catch (FontFormatException ex) {
            Logger.getLogger(SeleccionIcono.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(SeleccionIcono.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ZippyMouseClicked

    private void OllieMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OllieMouseClicked
        try {
            mostrarDescripcion("Ollie");
        } catch (FontFormatException ex) {
            Logger.getLogger(SeleccionIcono.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(SeleccionIcono.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_OllieMouseClicked

    private void VioletaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_VioletaMouseClicked
        try {
            mostrarDescripcion("Violeta");
        } catch (FontFormatException ex) {
            Logger.getLogger(SeleccionIcono.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(SeleccionIcono.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_VioletaMouseClicked

    private void MorrisMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MorrisMouseClicked
        try {
            mostrarDescripcion("Morris");
        } catch (FontFormatException ex) {
            Logger.getLogger(SeleccionIcono.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(SeleccionIcono.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_MorrisMouseClicked

    private void CarlitosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CarlitosMouseClicked
        try {
            mostrarDescripcion("Carlitos");
        } catch (FontFormatException ex) {
            Logger.getLogger(SeleccionIcono.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(SeleccionIcono.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_CarlitosMouseClicked

    private void NellyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NellyMouseClicked
        try {
            mostrarDescripcion("Nelly");
        } catch (FontFormatException ex) {
            Logger.getLogger(SeleccionIcono.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(SeleccionIcono.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_NellyMouseClicked

    private void CamilaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CamilaMouseClicked
        try {
            mostrarDescripcion("Camila");
        } catch (FontFormatException ex) {
            Logger.getLogger(SeleccionIcono.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(SeleccionIcono.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_CamilaMouseClicked

    private void CerviMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CerviMouseClicked
        try {
            mostrarDescripcion("Cervi");
        } catch (FontFormatException ex) {
            Logger.getLogger(SeleccionIcono.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(SeleccionIcono.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_CerviMouseClicked

    private void UrsulaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UrsulaMouseClicked
        try {
            mostrarDescripcion("Ursula");
        } catch (FontFormatException ex) {
            Logger.getLogger(SeleccionIcono.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(SeleccionIcono.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_UrsulaMouseClicked

    private void OrlyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OrlyMouseClicked
        try {
            mostrarDescripcion("Orly");
        } catch (FontFormatException ex) {
            Logger.getLogger(SeleccionIcono.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(SeleccionIcono.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_OrlyMouseClicked

    private void OzzyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OzzyMouseClicked
        try {
            mostrarDescripcion("Ozzy");
        } catch (FontFormatException ex) {
            Logger.getLogger(SeleccionIcono.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(SeleccionIcono.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_OzzyMouseClicked

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        RolEstudiante rolestudiante = new RolEstudiante();
        rolestudiante.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnRegresarActionPerformed

    private void btnMinimizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMinimizarActionPerformed
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_btnMinimizarActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnEscogerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEscogerActionPerformed
        FileManager fileManager = new FileManager("estudiantes.txt");

        // Modificar un dato específico
        fileManager.modifyData(icono, txtTitulo.getText());
        JOptionPane.showMessageDialog(this, "Icono cambiado correctamente.");
        Seleccion seleccion = new Seleccion();
        seleccion.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnEscogerActionPerformed

    private void mostrarDescripcion(String animal) throws FontFormatException, IOException {
        txtDescripcion.setEditable(true);
        txtTitulo.setEditable(true);
        Font customFont = Font.createFont(Font.TRUETYPE_FONT, new File("src/font/Schoolbell-Regular.ttf"));
        txtDescripcion.setFont(customFont.deriveFont(Font.PLAIN, 19));

        String descripcion = obtenerDescripcion(animal);
        txtDescripcion.setText(""); // Limpiar el área de texto antes de agregar nueva descripción
        txtDescripcion.append(descripcion); // Agregar la nueva descripción al área de texto
        txtDescripcion.setEditable(false);
        txtTitulo.setFont(customFont.deriveFont(Font.PLAIN, 25));
        txtTitulo.setText("");
        txtTitulo.append(animal);
        txtTitulo.setEditable(false);

    }

    public String obtenerDescripcion(String animal) {

        switch (animal) {
            case "Pandy":
                return "Pandy es un adorable oso panda que \n"
                        + "adora resolver problemas matemáticos. \n"
                        + "Con su habilidad para contar bambúes y\n"
                        + "calcular la cantidad de hojas que necesita\n"
                        + "para su merienda, es un experto en \n"
                        + "aritmética.";
            case "Coni":
                return "Coni es un conejo ágil y curioso que \n"
                        + "encuentra diversión en resolver problemas\n"
                        + "de álgebra. Con su velocidad para saltar de\n"
                        + "un lugar a otro, puede resolver ecuaciones\n"
                        + "en un abrir y cerrar de ojos.";
            case "Girafina":
                return "Girafina es una jirafa alta y elegante que\n"
                        + "ama las geometrías. Con su cuello largo,\n"
                        + "puede visualizar formas complejas desde \n"
                        + "lejos y disfrutar resolviendo puzzles\n"
                        + "geométricos.";
            case "Ellie":
                return "Ellie es una elefanta inteligente que disfruta\n"
                        + "de las fracciones. Con su memoria \n"
                        + "prodigiosa, puede dividir fácilmente la  \n"
                        + "comida en porciones iguales para sus\n"
                        + "amigos en la selva.";
            case "Koko":
                return "Koko es un koala adorable que encuentra \n"
                        + "la geometría en la naturaleza. Con su amor\n"
                        + "por las figuras en los árboles y las formas\n"
                        + "de las hojas, puede enseñar sobre patrones\n"
                        + "y simetría.";
            case "Zippy":
                return "Zippy es un zorro astuto que disfruta de \n"
                        + "los problemas de lógica. Con su ingenio y \n"
                        + "astucia, puede resolver acertijos y \n"
                        + "rompecabezas de manera rápida y eficiente.";
            case "Tiggy":
                return "Tiggy es un tigre valiente que domina las\n"
                        + "operaciones matemáticas básicas. Con su \n"
                        + "fuerza y agilidad, puede sumar y restar \n"
                        + "números grandes en un abrir y cerrar de \n"
                        + "ojos.";
            case "Wally":
                return "Wally es una ballena amigable que adora \n"
                        + "los números grandes. Con su tamaño \n"
                        + "masivo, enseñar sobre números grandes y \n"
                        + "operaciones de multiplicación.";
            case "Ollie":
                return "Ollie es una oveja juguetona que encuentra \n"
                        + "diversión en resolver problemas de \n"
                        + "estadística. Con su capacidad para contar y\n"
                        + "organizar, puede ayudar a entender \n"
                        + "conceptos como promedio y moda.";
            case "Leopoldo":
                return "Leopoldo es un león majestuoso que \n"
                        + "disfruta resolviendo problemas de \n"
                        + "geometría. Con su visión aguda y su gracia,\n"
                        + "puede enseñar sobre ángulos y formas\n"
                        + "en la naturaleza.";
            case "Ardi":
                return "Ardi es una ardilla ágil que adora los \n"
                        + "problemas de matemáticas financieras. Con \n"
                        + "su habilidad para almacenar y administrar \n"
                        + "nueces, puede enseñar sobre el valor del\n"
                        + "dinero y el interés.";
            case "Violeta":
                return "Violeta es una vaca tranquila que encuentra \n"
                        + "belleza en los números primos. Con su \n"
                        + "disposición pacífica, puede explicar la \n"
                        + "singularidad y la  importancia de los\n"
                        + "números primos en las matemáticas.";
            case "Ozzy":
                return "Ozzy es un oso cariñoso que disfruta \n"
                        + "de los problemas de probabilidad. Con su \n"
                        + "amor por la miel y su instinto para\n"
                        + "calcular probabilidades, puede enseñar \n"
                        + "sobre eventos aleatorios de manera  \n"
                        + "divertida.";
            case "Capito":
                return "Capito es una capibara relajada que \n"
                        + "encuentra tranquilidad en la geometría \n"
                        + "fractal. Con su amor por el agua y su \n"
                        + "naturaleza serena, puede enseñar sobre\n"
                        + "patrones repetitivos en la naturaleza.";
            case "Nina":
                return "Nina es una nutria juguetona que adora \n"
                        + "resolver  problemas de medidas y \n"
                        + "conversiones. Con su habilidad para nadar y\n"
                        + "sumergirse, puede enseñar sobre volumen\n"
                        + "y capacidad.";
            case "Orly":
                return "Orly es una orca majestuosa que \n"
                        + "encuentra fascinación en los números \n"
                        + "negativos. Con su gracia en el agua y su\n"
                        + "habilidad para sumergirse a grandes \n"
                        + "profundidades, puede enseñar sobre la \n"
                        + "dirección y magnitud en los números.";
            case "Fiona":
                return "Fiona es una foca curiosa que disfruta de \n"
                        + "los problemas de proporción y razón. Con \n"
                        + "su amor por los peces y su agilidad en el \n"
                        + "agua, puede enseñar sobre proporciones en \n"
                        + "la vida marina.";
            case "Ratito":
                return "Ratito es un ratón travieso que encuentra \n"
                        + "diversión en los problemas de multiplicación. \n"
                        + "Con su velocidad y su habilidad para \n"
                        + "recolectar semillas, puede enseñar sobre la \n"
                        + "importancia de la multiplicación en la \n"
                        + "naturaleza.";
            case "Ursula":
                return "Ursula es un uron enérgico que disfruta \n"
                        + "resolviendo problemas de geometría en \n"
                        + "tres dimensiones. Con su agilidad en tierra \n"
                        + "y agua, puede enseñar sobre formas\n"
                        + "tridimensionales y volúmenes.";
            case "Camila":
                return "Camila es un camello resistente que adora \n"
                        + "resolver problemas de proporción y \n"
                        + "porcentaje. Con su capacidad para \n"
                        + "sobrevivir en el desierto y su habilidad \n"
                        + "para almacenar agua, puede enseñar sobre  \n"
                        + "proporciones en entornos áridos.";
            case "Morris":
                return "Morris es una morsa tranquila que \n"
                        + "encuentra paz en los problemas de álgebra.\n"
                        + "Con su amor por descansar en el hielo y su\n"
                        + "agudeza mental, puede enseñar sobre \n"
                        + "ecuaciones y variables.";
            case "Cervi":
                return "Cervi es un ciervo elegante que disfruta\n"
                        + "resolviendo problemas de geometría\n"
                        + "espacial. Con su gracia al saltar y correr, \n"
                        + "puede enseñar sobre formas en \n"
                        + "movimiento y coordenadas en la naturaleza.";
            case "Nelly":
                return "Nelly es un narval encantador que encuentra \n"
                        + "fascinación en los problemas de \n"
                        + "trigonometría. Con su habilidad para nadar\n"
                        + "en aguas profundas y su agudeza en la \n"
                        + "percepción, puede enseñar sobre ángulos y \n"
                        + "distancias en el océano.";
            case "Carlitos":
                return "Carlitos es un cerdo inteligente que \n"
                        + "disfruta de los problemas de aritmética\n"
                        + "básica. Con su amor por las trufas y su\n"
                        + "nariz sensible, puede enseñar sobre sumas \n"
                        + "y restas de manera lúdica.";
            default:
                return "Descripción no disponible";
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SeleccionIcono.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SeleccionIcono.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SeleccionIcono.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SeleccionIcono.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SeleccionIcono().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Ardi;
    private javax.swing.JLabel Camila;
    private javax.swing.JLabel Capito;
    private javax.swing.JLabel Carlitos;
    private javax.swing.JLabel Cervi;
    private javax.swing.JLabel Coni;
    private javax.swing.JLabel Ellie;
    private javax.swing.JLabel Fiona;
    private javax.swing.JLabel Girafina;
    private javax.swing.JLabel Koko;
    private javax.swing.JLabel Leopoldo;
    private javax.swing.JLabel Morris;
    private javax.swing.JLabel Nelly;
    private javax.swing.JLabel Nina;
    private javax.swing.JLabel Ollie;
    private javax.swing.JLabel Orly;
    private javax.swing.JLabel Ozzy;
    private javax.swing.JLabel Pandy;
    private javax.swing.JLabel Ratito;
    private javax.swing.JLabel Tiggy;
    private javax.swing.JLabel Ursula;
    private javax.swing.JLabel Violeta;
    private javax.swing.JLabel Wally;
    private javax.swing.JLabel Zippy;
    private javax.swing.JButton btnEscoger;
    private javax.swing.JButton btnMinimizar;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JPanel root;
    private javax.swing.JScrollPane scrollDescripcion;
    private javax.swing.JScrollPane scrollTitulo;
    private javax.swing.JLabel seleccionicono;
    private javax.swing.JTextArea txtDescripcion;
    private javax.swing.JTextArea txtTitulo;
    // End of variables declaration//GEN-END:variables
}
