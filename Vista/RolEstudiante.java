/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vista;

import java.awt.Color;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import controlador.FileManager;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.LinkedList;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;


/**
 *
 * @author WILMER
 */
public class RolEstudiante extends javax.swing.JFrame {

    /**
     * Creates new form RolEstudiante
     */
    
    private LinkedList<String> identificaciones = new LinkedList<>();    
    private LinkedList<String> padres = new LinkedList<>();    
    private LinkedList<String> profesores = new LinkedList<>();    
    
    
    public RolEstudiante() {
        initComponents();
        btnSalir.setOpaque(false);
        btnSalir.setContentAreaFilled(false);
        btnSalir.setBorderPainted(false);
        btnMinimizar.setOpaque(false);
        btnMinimizar.setContentAreaFilled(false);
        btnMinimizar.setBorderPainted(false);
        btnPadre.setOpaque(false);
        btnPadre.setContentAreaFilled(false);
        btnPadre.setBorderPainted(false);
        btnRegresar.setOpaque(false);
        btnRegresar.setContentAreaFilled(false);
        btnRegresar.setBorderPainted(false);
        btnProfesor.setOpaque(false);
        btnProfesor.setContentAreaFilled(false);
        btnProfesor.setBorderPainted(false);
        btnRegistro.setOpaque(false);
        btnRegistro.setContentAreaFilled(false);
        btnRegistro.setBorderPainted(false);
        
        ImageIcon icono = new ImageIcon(getClass().getResource("/icons/icon.png"));
        this.setIconImage(icono.getImage());
        

    }

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtApodo = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        txtApellido = new javax.swing.JTextField();
        txtIdentificacion = new javax.swing.JTextField();
        txtNacimiento = new javax.swing.JTextField();
        txtCodigo = new javax.swing.JTextField();
        txtColegio = new javax.swing.JTextField();
        txtProfesorCargo = new javax.swing.JTextField();
        txtPersonaCargo = new javax.swing.JTextField();
        btnSalir = new javax.swing.JButton();
        btnMinimizar = new javax.swing.JButton();
        btnRegresar = new javax.swing.JButton();
        btnProfesor = new javax.swing.JButton();
        btnPadre = new javax.swing.JButton();
        btnRegistro = new javax.swing.JButton();
        btnBorrar = new javax.swing.JLabel();
        lblEstudiante = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtApodo.setBackground(new java.awt.Color(238, 238, 238));
        txtApodo.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtApodo.setBorder(null);
        txtApodo.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtApodo.setSelectedTextColor(new java.awt.Color(0, 0, 0));
        txtApodo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtApodoMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtApodoMousePressed(evt);
            }
        });
        txtApodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtApodoActionPerformed(evt);
            }
        });
        getContentPane().add(txtApodo, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 170, 430, 20));

        txtNombre.setBackground(new java.awt.Color(238, 238, 238));
        txtNombre.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtNombre.setBorder(null);
        txtNombre.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtNombreMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtNombreMousePressed(evt);
            }
        });
        getContentPane().add(txtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 230, 200, 20));

        txtApellido.setBackground(new java.awt.Color(238, 238, 238));
        txtApellido.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtApellido.setBorder(null);
        txtApellido.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtApellidoMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtApellidoMousePressed(evt);
            }
        });
        txtApellido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtApellidoActionPerformed(evt);
            }
        });
        getContentPane().add(txtApellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 230, 190, 20));

        txtIdentificacion.setBackground(new java.awt.Color(238, 238, 238));
        txtIdentificacion.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtIdentificacion.setBorder(null);
        txtIdentificacion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtIdentificacionMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtIdentificacionMousePressed(evt);
            }
        });
        txtIdentificacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdentificacionActionPerformed(evt);
            }
        });
        getContentPane().add(txtIdentificacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(588, 290, 430, 20));

        txtNacimiento.setBackground(new java.awt.Color(238, 238, 238));
        txtNacimiento.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtNacimiento.setForeground(new java.awt.Color(204, 204, 204));
        txtNacimiento.setText("DD/MM/AAAA");
        txtNacimiento.setBorder(null);
        txtNacimiento.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtNacimientoMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtNacimientoMousePressed(evt);
            }
        });
        txtNacimiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNacimientoActionPerformed(evt);
            }
        });
        getContentPane().add(txtNacimiento, new org.netbeans.lib.awtextra.AbsoluteConstraints(588, 350, 430, 30));

        txtCodigo.setBackground(new java.awt.Color(238, 238, 238));
        txtCodigo.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtCodigo.setBorder(null);
        txtCodigo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtCodigoMousePressed(evt);
            }
        });
        txtCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodigoActionPerformed(evt);
            }
        });
        getContentPane().add(txtCodigo, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 415, 190, 20));

        txtColegio.setBackground(new java.awt.Color(238, 238, 238));
        txtColegio.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtColegio.setBorder(null);
        txtColegio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtColegioMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtColegioMousePressed(evt);
            }
        });
        txtColegio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtColegioActionPerformed(evt);
            }
        });
        getContentPane().add(txtColegio, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 415, 190, 20));

        txtProfesorCargo.setBackground(new java.awt.Color(238, 238, 238));
        txtProfesorCargo.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtProfesorCargo.setBorder(null);
        txtProfesorCargo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtProfesorCargoMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtProfesorCargoMousePressed(evt);
            }
        });
        txtProfesorCargo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtProfesorCargoActionPerformed(evt);
            }
        });
        getContentPane().add(txtProfesorCargo, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 480, 430, 20));

        txtPersonaCargo.setBackground(new java.awt.Color(238, 238, 238));
        txtPersonaCargo.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtPersonaCargo.setBorder(null);
        txtPersonaCargo.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtPersonaCargo.setSelectedTextColor(new java.awt.Color(0, 0, 0));
        txtPersonaCargo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtPersonaCargoMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtPersonaCargoMousePressed(evt);
            }
        });
        txtPersonaCargo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPersonaCargoActionPerformed(evt);
            }
        });
        getContentPane().add(txtPersonaCargo, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 545, 430, 20));

        btnSalir.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        getContentPane().add(btnSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(1140, 12, 50, 50));

        btnMinimizar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnMinimizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMinimizarActionPerformed(evt);
            }
        });
        getContentPane().add(btnMinimizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(1075, 10, 50, 50));

        btnRegresar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });
        getContentPane().add(btnRegresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 50, 40));

        btnProfesor.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnProfesor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProfesorActionPerformed(evt);
            }
        });
        getContentPane().add(btnProfesor, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 440, 260, 50));

        btnPadre.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnPadre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPadreActionPerformed(evt);
            }
        });
        getContentPane().add(btnPadre, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 510, 260, 50));

        btnRegistro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRegistroMouseClicked(evt);
            }
        });
        btnRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistroActionPerformed(evt);
            }
        });
        getContentPane().add(btnRegistro, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 600, 130, 30));

        btnBorrar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBorrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnBorrarMouseClicked(evt);
            }
        });
        getContentPane().add(btnBorrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 80, 40, 50));

        lblEstudiante.setBackground(new java.awt.Color(238, 238, 238));
        lblEstudiante.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblEstudiante.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/registro estudiante.png"))); // NOI18N
        lblEstudiante.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        getContentPane().add(lblEstudiante, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1200, 700));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnProfesorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProfesorActionPerformed
        RolProfesor rolProfesor = new RolProfesor();
        rolProfesor.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnProfesorActionPerformed

    private void txtPersonaCargoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPersonaCargoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPersonaCargoActionPerformed

    private void txtCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCodigoActionPerformed

    private void txtNacimientoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtNacimientoMousePressed
        if (txtNacimiento.getText().equals("DD/MM/AAAA"))
        {
            txtNacimiento.setText("");
            txtNacimiento.setForeground(Color.BLACK);
        }    
    }//GEN-LAST:event_txtNacimientoMousePressed

    private void txtIdentificacionMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtIdentificacionMousePressed
        if (txtNacimiento.getText().isEmpty()) {
            txtNacimiento.setText("DD/MM/AA");
            txtNacimiento.setForeground(Color.LIGHT_GRAY);
        }
    }//GEN-LAST:event_txtIdentificacionMousePressed

    private void txtPersonaCargoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtPersonaCargoMousePressed
       if (txtNacimiento.getText().isEmpty()) {
            txtNacimiento.setText("DD/MM/AA");
            txtNacimiento.setForeground(Color.LIGHT_GRAY);
        }
    }//GEN-LAST:event_txtPersonaCargoMousePressed

    private void txtNombreMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtNombreMousePressed
        if (txtNacimiento.getText().isEmpty()) {
            txtNacimiento.setText("DD/MM/AA");
            txtNacimiento.setForeground(Color.LIGHT_GRAY);
        }
    }//GEN-LAST:event_txtNombreMousePressed

    private void txtCodigoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtCodigoMousePressed
        if (txtNacimiento.getText().isEmpty()) {
            txtNacimiento.setText("DD/MM/AA");
            txtNacimiento.setForeground(Color.LIGHT_GRAY);
        }
    }//GEN-LAST:event_txtCodigoMousePressed

    private void txtIdentificacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdentificacionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdentificacionActionPerformed

    private void txtNacimientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNacimientoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNacimientoActionPerformed

    private void txtColegioMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtColegioMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtColegioMousePressed

    private void txtColegioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtColegioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtColegioActionPerformed

    private void txtApellidoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtApellidoMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtApellidoMousePressed

    private void txtApellidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtApellidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtApellidoActionPerformed

    private void txtProfesorCargoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtProfesorCargoMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtProfesorCargoMousePressed

    private void txtProfesorCargoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtProfesorCargoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtProfesorCargoActionPerformed

    private void txtApodoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtApodoMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtApodoMousePressed

    private void txtApodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtApodoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtApodoActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnMinimizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMinimizarActionPerformed
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_btnMinimizarActionPerformed

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        Principal principal = new Principal();
        principal.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnRegresarActionPerformed

    private void btnPadreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPadreActionPerformed
        RolPadre rolPadre = new RolPadre();
        rolPadre.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnPadreActionPerformed

    private void btnRegistroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRegistroMouseClicked
        SeleccionIcono seleccion = new SeleccionIcono();
        seleccion.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnRegistroMouseClicked

    private void btnRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistroActionPerformed
        Registrar();
    }//GEN-LAST:event_btnRegistroActionPerformed

    private void txtApodoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtApodoMouseClicked
        txtApodo.setForeground(Color.BLACK);
    }//GEN-LAST:event_txtApodoMouseClicked

    private void txtNombreMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtNombreMouseClicked
        txtNombre.setForeground(Color.BLACK);
    }//GEN-LAST:event_txtNombreMouseClicked

    private void txtProfesorCargoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtProfesorCargoMouseClicked
        txtProfesorCargo.setForeground(Color.BLACK);
    }//GEN-LAST:event_txtProfesorCargoMouseClicked

    private void txtPersonaCargoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtPersonaCargoMouseClicked
        txtPersonaCargo.setForeground(Color.BLACK);
    }//GEN-LAST:event_txtPersonaCargoMouseClicked

    private void txtColegioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtColegioMouseClicked
        txtPersonaCargo.setForeground(Color.BLACK);
    }//GEN-LAST:event_txtColegioMouseClicked

    private void txtIdentificacionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtIdentificacionMouseClicked
        txtIdentificacion.setForeground(Color.BLACK);
    }//GEN-LAST:event_txtIdentificacionMouseClicked

    private void txtApellidoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtApellidoMouseClicked
        txtApellido.setForeground(Color.BLACK);
    }//GEN-LAST:event_txtApellidoMouseClicked

    private void txtNacimientoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtNacimientoMouseClicked
        txtNacimiento.setText("");
        txtNacimiento.setForeground(Color.BLACK);
    }//GEN-LAST:event_txtNacimientoMouseClicked

    private void btnBorrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBorrarMouseClicked
       borrar();
    }//GEN-LAST:event_btnBorrarMouseClicked

    private void borrar() {
        txtApellido.setText("");
        txtApodo.setText("");
        txtCodigo.setText("");
        txtColegio.setText("");
        txtIdentificacion.setText("");
        txtNacimiento.setText("DD/MM/AAAA");
        txtNacimiento.setForeground(Color.LIGHT_GRAY);
        txtNombre.setText("");
        txtPersonaCargo.setText("");
        txtProfesorCargo.setText("");
    }
    private void Registrar() {
        
        FileManager fileManager = new FileManager("estudiantes.txt");
        String icono = "Pandy";
        
        if (validarDatos()) {
            // Código para registrar los datos
            // Aquí puedes agregar el código necesario para almacenar o procesar los datos
            String[] data = new String[]{
                txtIdentificacion.getText(),
                txtApodo.getText(),
                txtNombre.getText(),
                txtApellido.getText(),                
                txtNacimiento.getText(),
                txtCodigo.getText(),
                txtColegio.getText(),
                txtProfesorCargo.getText(),
                txtPersonaCargo.getText(),
                icono
            };
            // Aquí agregarías tu lógica de registro, como almacenar los datos en una base de datos
            Exitoso exitoso = new Exitoso();
            exitoso.setVisible(true);
            fileManager.saveData(data);
            identificaciones.add(txtIdentificacion.getText());
        } else {
            // Mostrar mensaje de error si los datos no son válidos
            JOptionPane.showMessageDialog(this, "Por favor, ingrese todos los datos correctamente.", "Error de registro", JOptionPane.ERROR_MESSAGE);
            
        }
    }
    
    public boolean validarDatos() {
        // Verificar que todos los campos no estén vacíos
        cargarIdentificacionesDesdeArchivo();
        cargarPadresDesdeArchivo();
        cargarProfesoresDesdeArchivo();        
        if (txtApellido.getText().isEmpty() ||
            txtApodo.getText().isEmpty() ||
            txtCodigo.getText().isEmpty() ||
            txtColegio.getText().isEmpty() ||
            txtIdentificacion.getText().isEmpty() ||
            txtNacimiento.getText().isEmpty() ||
            txtNombre.getText().isEmpty() ||
            txtProfesorCargo.getText().isEmpty() ||    
            txtPersonaCargo.getText().isEmpty()) {
            return false;
        }

        // Validar que el nombre y apellido no contengan números ni símbolos
        if (!validarTexto(txtNombre.getText()) || !validarTexto(txtApellido.getText())) {
            txtNombre.setForeground(Color.RED);
            txtApellido.setForeground(Color.RED);
            return false;
        }

        // Validar formato de la fecha de nacimiento
        if (!validarFechaNacimiento(txtNacimiento.getText())) {
            txtNacimiento.setForeground(Color.RED);
            return false;
        }

        // Validar que sólo exista una cedula
        if (!verificarIdentificacionNoExiste(txtIdentificacion.getText())) {
            txtIdentificacion.setForeground(Color.RED);
            return false;
        }
        
        // Validar que la identificación sea un entero positivo de más de 7 caracteres
        if (!validarIdentificacion(txtIdentificacion.getText())) {
            txtIdentificacion.setForeground(Color.RED);
            return false;
        }

        // Validar que el código de colegio sea de exactamente 4 dígitos y está en el archivo
        if (!validarCodigoColegio(txtColegio.getText())) {
            txtColegio.setForeground(Color.RED);
            return false;
        }
        
        // Validar que el de estudiante sea de exactamente 6 dígitos
        if (!validarCodigoEstudiante(txtCodigo.getText())) {
            txtCodigo.setForeground(Color.RED);
            return false;
        }
        
        // Validar que exista un profesor
        if (!verificarProfesorExiste(txtProfesorCargo.getText())) {
            txtProfesorCargo.setForeground(Color.RED);
            return false;
        }

        // Validar que exista un padre
        if (!verificarPadreExiste(txtPersonaCargo.getText())) {
            txtPersonaCargo.setForeground(Color.RED);
            return false;
        }
        // Si todos los datos son válidos
        return true;
    }

    private boolean validarCorreo(String correo) {
        // Expresión regular para validar un correo electrónico
        String emailRegex = "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$";
        Pattern pattern = Pattern.compile(emailRegex);
        Matcher matcher = pattern.matcher(correo);
        return matcher.matches();
    }
    
    
    private boolean validarFechaNacimiento(String fecha) {
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        sdf.setLenient(false); // No permitir fechas inválidas
        try {
            Date date = sdf.parse(fecha);

            // Obtener día, mes y año
            String[] parts = fecha.split("/");
            int day = Integer.parseInt(parts[0]);
            int month = Integer.parseInt(parts[1]);
            int year = Integer.parseInt(parts[2]);

            // Verificar que el mes esté entre 1 y 12
            if (month < 1 || month > 12) {
                return false;
            }

            // Verificar que el día esté entre 1 y 31
            if (day < 1 || day > 31) {
                return false;
            }

            // Verificar el rango del año, que no sea antes de 1900 ni después de 2023
            if (year < 1900 || year > 2023) { 
                return false;
           
            }

        } catch (ParseException | NumberFormatException e) {
            return false; // Si ocurre un error al parsear la fecha, la fecha no es válida
        }
        return true;
    }
    private boolean validarIdentificacion(String identificacion) {
        // Verificar que la identificación sea un entero positivo de más de 7 caracteres
        if (identificacion.length() > 7) {
            try {
                int num = Integer.parseInt(identificacion);
                return num > 0; // Es un entero positivo
            } catch (NumberFormatException e) {
                return false; // No es un número válido
            }
        }
        return false; // No tiene más de 7 caracteres
    }
    
    private boolean validarNumero(String numero) {
        // Verificar que el número tenga exactamente 10 dígitos y sea un entero positivo
        if (numero.length() == 10) {
            try {
                Long num = Long.parseLong(numero); // Usamos Long para asegurarnos de que acepte 10 dígitos
                return num > 0; // Es un entero positivo
            } catch (NumberFormatException e) {
                return false; // No es un número válido
            }
        }
        return false; // No tiene exactamente 10 dígitos
    }
    
    private boolean validarTexto(String texto) {
        // Expresión regular para validar que el texto solo contenga letras y espacios
        String textoRegex = "^[a-zA-Z\\s]+$";
        Pattern pattern = Pattern.compile(textoRegex);
        Matcher matcher = pattern.matcher(texto);
        return matcher.matches();
    }
    
    private boolean validarCodigoColegio(String codigo) {
        // Verificar que el código tenga exactamente 4 dígitos y sea un entero positivo
        if (codigo.length() == 4) {
            try {
                int num = Integer.parseInt(codigo);
                if (num > 0) { // Es un entero positivo
                    return codigoExisteEnArchivoCC(codigo);
                }
            } catch (NumberFormatException e) {
                return false; // No es un número válido
            }
        }
        return false; // No tiene exactamente 4 dígitos
    }
    
    private boolean validarCodigoEstudiante(String codigo) {
        // Verificar que el código tenga exactamente 4 dígitos y sea un entero positivo
        if (codigo.length() == 6) {
            try {
                int num = Integer.parseInt(codigo);
                if (num > 0) { // Es un entero positivo
                    return true;
                }
            } catch (NumberFormatException e) {
                return false; // No es un número válido
            }
        }
        return false; // No tiene exactamente 4 dígitos
    }

    private boolean codigoExisteEnArchivoCC(String codigo) {
        try (BufferedReader br = new BufferedReader(new FileReader("codigosColegios.txt"))) {
            String line;
            while ((line = br.readLine()) != null) {
                if (line.trim().equals(codigo)) {
                    return true; // El código existe en el archivo
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
        return false; // El código no se encontró en el archivo
    }
    
    public void cargarIdentificacionesDesdeArchivo() {
        try (BufferedReader br = new BufferedReader(new FileReader("estudiantes.txt"))) {
            String line;
            int count = 0;
            while ((line = br.readLine()) != null) {
                count++;
                switch (count) {
                    case 0:  
                        identificaciones.add(line.trim());
                }
                if (count == 10) { // Reinicia el contador después de procesar el décimo campo
                    count = -1;
                }
            }
            System.out.print("iden:"+identificaciones);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }    
    
    public void cargarProfesoresDesdeArchivo() {
        try (BufferedReader br = new BufferedReader(new FileReader("profesores.txt"))) {
            String line;            
            int count = 0;
            while ((line = br.readLine()) != null) {
                count++;
                switch (count) {
                    case 1:  
                        profesores.add(line.trim());
                }
                if (count == 8) { // Reinicia el contador después de procesar el ultimo campo
                    count = -1;
                }
            }
            System.out.print("prof"+profesores);
            /*
            while ((line = br.readLine()) != null) {
                profesores.add(line.trim()); // Añadir la identificación a la lista
                // Saltar las siguientes 7 líneas que corresponden a los otros campos del registro
                for (int i = 0; i < 9; i++) {
                    br.readLine();
                }
            }*/
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
    
    public void cargarPadresDesdeArchivo() {
        try (BufferedReader br = new BufferedReader(new FileReader("padres.txt"))) {
            String line;
            while ((line = br.readLine()) != null) {
                padres.add(line.trim()); // Añadir la identificación a la lista
                // Saltar las siguientes 7 líneas que corresponden a los otros campos del registro
                for (int i = 0; i < 9; i++) {
                    br.readLine();
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
    
    public boolean verificarPadreExiste(String identificacion) {
        return padres.contains(identificacion);
    }
    
    public boolean verificarProfesorExiste(String identificacion) {
        return !profesores.contains(identificacion);
    }
    
     public boolean verificarIdentificacionNoExiste(String identificacion) {
        return !identificaciones.contains(identificacion);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RolEstudiante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RolEstudiante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RolEstudiante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RolEstudiante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RolEstudiante().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btnBorrar;
    private javax.swing.JButton btnMinimizar;
    private javax.swing.JButton btnPadre;
    private javax.swing.JButton btnProfesor;
    private javax.swing.JButton btnRegistro;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JLabel lblEstudiante;
    private javax.swing.JTextField txtApellido;
    private javax.swing.JTextField txtApodo;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtColegio;
    private javax.swing.JTextField txtIdentificacion;
    private javax.swing.JTextField txtNacimiento;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtPersonaCargo;
    private javax.swing.JTextField txtProfesorCargo;
    // End of variables declaration//GEN-END:variables
}
